#!/bin/sh

set -e
unset CDPATH
unset IFS
readonly SOURCE="$(readlink -nf "$0")"
readonly SOURCE_PATH="$(dirname "$SOURCE")"

create_home_dir_symlink() {
    target="$1"
    target_basename="$(basename "$target")"

    if test "$target_basename" = "."; then
        return
    fi

    if test "$target_basename" = ".."; then
        return
    fi

    if test "$HOME/$target_basename" = "$SOURCE_PATH"; then
        echo >&2 "$0:create_home_dir_symlink() cannot link to self"
        exit 1
    fi

    from="./${target#$HOME/}"
    to="$HOME/$target_basename"

    if test -L "$to" -o ! -e "$to"; then
        ln -sfnv "$from" "$to"
    else
        echo >&2 "=> NOTICE Could not create home directory symlink."
        echo >&2 "          File already exists. Move the existing file and rerun the install script. \"$from\" -> \"$to\""
    fi
}

cd "$SOURCE_PATH"
echo "command: cd $SOURCE_PATH"

SKIP_DEPS=
SKIP_SUBMODULES=
while test "$#" != 0; do
    case "$1" in
        --skip-dep*) SKIP_DEPS=true ;;
        --skip-sub*) SKIP_SUBMODULES=true ;;
        --) shift; break ;; # standard end of options list
        -*) echo >&2 "$0: unknown option '$1'"; exit 1 ;;
        *) echo >&2 "$0: unknown argument '$1'"; exit 1 ;;
    esac
    shift
done

if test -z "$SKIP_DEPS"; then
    echo "install dependencies..."

    if test ! -f /etc/apt/sources.list.d/yarn.list; then
        curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
        echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    fi

    sudo apt-get update

    command -v audacity >/dev/null 2>&1 || sudo apt-get install audacity pavucontrol
    command -v chromium-browser >/dev/null 2>&1 || sudo apt-get install chromium-browser
    command -v cmake  >/dev/null 2>&1 || sudo apt-get install cmake
    command -v ctags >/dev/null 2>&1 || sudo apt-get install exuberant-ctags
    command -v curl >/dev/null 2>&1 || sudo apt-get install curl
    command -v dconf-editor >/dev/null 2>&1 || sudo apt-get install dconf-editor
    command -v figlet >/dev/null 2>&1 || sudo apt-get install figlet
    command -v firefox >/dev/null 2>&1 || sudo apt-get install firefox firefox-locale-en
    command -v flake8 >/dev/null 2>&1 || sudo apt-get install python-flake8
    command -v gimp >/dev/null 2>&1 || sudo apt-get install gimp
    command -v git >/dev/null 2>&1 || sudo apt-get install git
    command -v gitk >/dev/null 2>&1 || sudo apt-get install gitk
    command -v lcov >/dev/null 2>&1 || sudo apt-get install lcov
    command -v netstat >/dev/null 2>&1 || sudo apt-get install net-tools
    command -v pip3 >/dev/null 2>&1 || sudo apt-get install python3-pip
    command -v rename >/dev/null 2>&1 || sudo apt-get install rename
    command -v sqlite3 >/dev/null 2>&1 || sudo apt-get install sqlite3
    command -v tmux >/dev/null 2>&1 || sudo apt-get install tmux
    command -v tree >/dev/null 2>&1 || sudo apt-get install tree
    command -v tuxguitar >/dev/null 2>&1 || sudo apt-get install tuxguitar tuxguitar-alsa tuxguitar-oss tuxguitar-jsa
    command -v unzip >/dev/null 2>&1 || sudo apt-get install unzip
    command -v vim.gtk >/dev/null 2>&1 || sudo apt-get install vim-gtk
    command -v wmctrl  >/dev/null 2>&1 || sudo apt-get install wmctrl
    command -v xclip >/dev/null 2>&1 || sudo apt-get install xclip
    command -v yarn >/dev/null 2>&1 || sudo apt-get install yarn

    dpkg -l | grep ubuntu-restricted-extras >/dev/null 2>&1 || sudo apt-get install ubuntu-restricted-extras

    # Required for Git interactive.singlekey to work. See https://superuser.com/a/817688.
    dpkg -l | grep libterm-readkey-perl >/dev/null 2>&1 || sudo apt-get install libterm-readkey-perl

    # Fonts.
    dpkg -l | grep fonts-firacode >/dev/null 2>&1 || sudo apt-get install fonts-firacode
    dpkg -l | grep fonts-inconsolata >/dev/null 2>&1 || sudo apt-get install fonts-inconsolata
    dpkg -l | grep ttf-anonymous-pro >/dev/null 2>&1 || sudo apt-get install ttf-anonymous-pro
    dpkg -l | grep ttf-mscorefonts-installer >/dev/null 2>&1 || sudo apt-get install ttf-mscorefonts-installer
    dpkg -l | grep ttf-ubuntu-font-family >/dev/null 2>&1 || sudo apt-get install ttf-ubuntu-font-family
    # The following fonts need to be installed manually:
    # * Hasklig (Source Code Pro font with ligatures) https://github.com/i-tu/Hasklig
    # * Monoid (lagature font) https://github.com/larsenwork/monoid

    # Music production.
    # The following need to be install manually:
    # * LMMS: https://lmms.io/download/
    # * Ardour: https://ardour.org/

    # Python developer tools.
    pip3 install --upgrade --user flake8
    pip3 install --upgrade --user flake8-docstrings
    pip3 install --upgrade --user pydocstyle
    pip3 install --upgrade --user mypy
    pip3 install --upgrade --user gcovr
    python3.8 -m pip install --upgrade --user flake8
    python3.8 -m pip install --upgrade --user flake8-docstrings
    python3.8 -m pip install --upgrade --user pydocstyle
    python3.8 -m pip install --upgrade --user mypy
    python3.8 -m pip install --upgrade --user gcovr

    # Developer tools.
    # The following need to be install manually:
    # * Hub: https://github.com/github/hub

    # GitHub CLI
    # https://github.com/cli/cli#installation-and-upgrading
fi

if test -z "$SKIP_SUBMODULES"; then
    echo "installing submodules..."
    git submodule init
    git submodule update
    echo "updating submodules to latest master..."
    git submodule foreach 'git fetch && git merge --ff-only origin/master'
fi

echo "configure symlinks..."

for file in "$SOURCE_PATH/src/".*; do
    create_home_dir_symlink "$file"
done

for file in "$SOURCE_PATH"/src/*; do
    create_home_dir_symlink "$file"
done

ln -sfv ~/.dotfiles/vendor/paulirish/git-open/git-open ~/bin/git-open
ln -sfv ~/.dotfiles/vendor/php-build/php-build/bin/php-build  ~/bin/php-build
ln -sfnv ./.dotfiles/vendor/nvm-sh/nvm ~/.nvm

# Quick hacky fixes for rbenv
mkdir -p ~/.rbenv/plugins
touch ~/.rbenv/plugins/ruby-build
rm ~/.rbenv/plugins/ruby-build
ln -sfv ~/.dotfiles/vendor/rbenv/ruby-build ~/.rbenv/plugins/ruby-build

if test -f ~/.dotfiles-private/install; then
    ~/.dotfiles-private/install
fi

# Composer
composer config --global notify-on-install false
composer config --global github-expose-hostname false
composer global update
composer global require \
    "friendsofphp/php-cs-fixer" \
    "laravel/installer" \
    "pds/skeleton" \
    "phan/phan" \
    "phploc/phploc" \
    "phpmd/phpmd" \
    "sensiolabs/security-checker"
