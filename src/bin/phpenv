#!/bin/sh

set -e
unset CDPATH
unset IFS

show_usage() {
    cat <<EOT
Usage: $(basename "$0") [-h|--help] [--version] [-V]
    or $(basename "$0") <command> [<args>]

Commands:
  install <version>     Install a PHP version
  versions              List all available PHP versions
  reload                Reloads config overrides and ~/bin symlinks
EOT
}

list_available_versions() {
    if test -d "$PREFIX/versions"; then
        for version in "$PREFIX/versions/"*; do
            prefix="  "
            postfix=""

            if test -d "$version"; then
                name="${version##*/}"

                if test -L "$version"; then
                    resolved="$(readlink -nf "$version")"
                    postfix=" -> ${resolved##*/}"
                fi
            fi

            echo "${prefix}${name}${postfix}"
        done | sort -V
    fi
}

install_version() {
    version="$1"

    if test -z "$version"; then
        echo >&2 "$(basename "$0"): version is required"
        exit 1
    fi

    if test ! -d "$PREFIX/versions"; then
        mkdir -p "$PREFIX/versions"
    fi

    prefix="$PREFIX/versions/$(basename "$version")"

    if test -e "$prefix"; then
        echo >&2 "$(basename "$0"): version already exists"
        exit 1
    fi

    echo "=> installing version $version (prefix=$prefix, ini=$INI)"
    "$PHP_BUILD_BIN" --ini "$INI" "$version" "$prefix"
}

get_latest_version_for() {
    for version in $(ls -vd ~/.phpenv/versions/"$1".[0-9]* | sort -V); do
        test -d "$version" || continue
    done

    echo "$version"
}

update_symlinks() {
    echo "=> update symlinks"

    # Remove broken version alias symlinks
    for versions in ~/bin/php[0-9]*; do
        if test ! -e "$versions"; then
            rm "$versions" || true
        fi
    done

    # Remove broken version symlinks
    for versions in ~/.phpenv/versions/*; do
        if test ! -e "$versions"; then
            rm "$versions"
        fi
    done

    # Update version symlinks
    ln -vnfs "$(get_latest_version_for 7.2)" ~/.phpenv/versions/7.2
    ln -vnfs "$(get_latest_version_for 7.3)" ~/.phpenv/versions/7.3
    ln -vnfs "$(get_latest_version_for 7.4)" ~/.phpenv/versions/7.4
    ln -vnfs "$(get_latest_version_for 7.4)" ~/.phpenv/versions/7
    ln -vnfs "$(get_latest_version_for 8.0)" ~/.phpenv/versions/8.0
    ln -vnfs "$(get_latest_version_for 8.1)" ~/.phpenv/versions/8.1
    ln -vnfs "$(get_latest_version_for 8.1)" ~/.phpenv/versions/8

    # Create ~/bin version symlinks
    for version_path in ~/.phpenv/versions/[0-9]*; do
        if test ! -d "$version_path"; then
            continue
        fi

        version="$(basename "$version_path")"
        version_source="$version_path/bin/php"
        version_target="$HOME/bin/php$version"

        if test -e "$version_target"; then
            if test -h "$version_target"; then
                rm "$version_target"
            else
                echo >&2 "ERROR: expected a symbolic file: $version_target"
                continue
            fi
        fi

        ln -sv "$version_source" "$version_target"

    done
}

update_configs() {
    echo "=> update configs"
    for phpenv_version_etc_conf_d in ~/.phpenv/versions/*/etc/conf.d; do
        if test ! -d "$phpenv_version_etc_conf_d"; then
            echo >&2 "WARNING: $phpenv_version_etc_conf_d is not a valid directory"
            continue
        fi

        ln -vfs "$PROJECTS_PATH/lde/lde/etc/php/conf.d/90-lde.ini" "$phpenv_version_etc_conf_d/90-lde.ini"
    done
}

reload() {
    update_symlinks
    update_configs
}

readonly VERSION="1.0.2"
readonly PREFIX="$HOME/.phpenv"
readonly PHP_BUILD_BIN="$HOME/bin/php-build"

if test ! -f "$PHP_BUILD_BIN" || test ! -x "$PHP_BUILD_BIN"; then
    echo >&2 "$(basename "$0"): $(basename "$PHP_BUILD_BIN") not found"
    exit 1
fi

test "$#" = 0 && show_usage && exit 0

INI=development
while test "$#" != 0; do
    case "$1" in
        -h|--help) show_usage; exit 0 ;;
        --version) echo "phpenv version $VERSION"; exit 0 ;;
        -V) echo "$VERSION"; exit 0 ;;
        --production) INI=production ;;
        install)
            shift
            if test "$1" = "--complete"; then
                "$PHP_BUILD_BIN" --definitions
                exit 0
            fi

            install_version "$@" || true
            echo "=> reload"
            reload
            exit 0
            ;;
        reload)
            reload
            exit 0
            ;;
        versions)
            list_available_versions
            exit 0
            ;;
        --) shift; break ;; # standard end of options list
        -*) echo >&2 "$(basename "$0"): unknown option '$1'"; exit 1 ;;
        *)  echo >&2 "$(basename "$0"): unknown argument '$1'"; exit 1 ;;
    esac
    shift
done
