# https://www.gnu.org/software/bash/manual/html_node/Readline-Init-File-Syntax.html

set bell-style none
set convert-meta off
set input-meta on
set meta-flag on
set output-meta on

# Make Tab autocomplete regardless of filename case.
# If set to On, readline performs filename matching and completion in a
# case-insensitive fashion.
set completion-ignore-case on

# List all matches in case multiple possible completions are possible.
# This alters the default behavior of the completion functions. If set to On,
# words which have more than one possible completion cause the matches to be
# listed immediately instead of ringing the bell.
set show-all-if-ambiguous on
set show-all-if-unmodified on

# Immediately add a trailing slash when autocompleting symlinks to directories.
# If set to On, completed names which are symbolic links to directories have a
# slash appended (subject to the value of mark-directories).
set mark-symlinked-directories on

# Use the text that has already been typed as the prefix for searching through.
# commands (basically more intelligent Up/Down behavior).
# Search forward/backward through the history for the string of characters
# between the start of the current line and the point. This is a non-incremental
# search.
"\e[B": history-search-forward
"\e[A": history-search-backward
"\e[C": forward-char
"\e[D": backward-char

# Ctrl+Left/Ctrl+Right for moving on the readline by word.
# Move forward/backward to the end/start of the next/current-or-previous word.
# Words are composed of alphanumeric characters (letters and digits).
"\e[1;5C": forward-word
"\e[1;5D": backward-word

# Do not autocomplete hidden files unless the pattern explicitly begins with a
# dot.
# This variable, when set to On, causes readline to match files whose names
# begin with a "." (hidden files) when performing filename completion. If set to
# Off, the leading "." must be supplied by the user in the filename to be
# completed.
set match-hidden-files off

# Show all autocomplete results at once.
# If set to On, readline uses an internal more-like pager to display a screenful
# of possible completions at a time.
set page-completions off

# If there are more than 200 possible completions for a word, ask to show them
# all.
# This determines when the user is queried about viewing the number of possible
# completions generated by the possible-completions command. It may be set to
# any integer value greater than or equal to zero. If the number of possible
# completions is greater than or equal to the value of this variable, the user
# is asked whether or not he wishes to view them; otherwise they are simply
# listed on the terminal.
set completion-query-items 200

# Show extra file information when completing, like "ls -F" does.
# If set to On, a character denoting a file's type as reported by stat(2) is
# appended to the filename when listing possible completions.
set visible-stats on

# Be more intelligent when autocompleting by also looking at the text after
# the cursor. For example, when the current line is "cd ~/src/mozil", and
# the cursor is on the "z", pressing Tab will not autocomplete it to "cd
# ~/src/mozillail", but to "cd ~/src/mozilla". (This is supported by the
# Readline used by Bash 4.)
# If set to On, this alters the default completion behavior when inserting a
# single match into the line. It's only active when performing completion in the
# middle of a word. If enabled, readline does not insert characters from the
# completion that match characters after point in the word being completed, so
# portions of the word following the cursor are not duplicated.
set skip-completed-text on
set colored-stats on
