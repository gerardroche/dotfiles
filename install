#!/bin/sh

set -e
unset CDPATH
unset IFS
readonly SOURCE="$(readlink -nf "$0")"
readonly SOURCE_PATH="$(dirname "$SOURCE")"

create_home_dir_symlink() {
    source="$1"
    source_basename="$(basename "$source")"

    if test "x$source_basename" = "x."; then
        return
    fi

    if test "x$source_basename" = "x.."; then
        return
    fi

    if test "x$HOME/$source_basename" = "x$SOURCE_PATH"; then
        echo >&2 "$0:create_home_dir_symlink() cannot link to self"
        exit 1
    fi

    destination="$HOME/$source_basename"
    checked-symlink "$source" "$destination"
}

is_ubuntu_20_04() {
    test "x$(lsb_release -r | cut -f2)" = "x20.04"
}

cd "$SOURCE_PATH"

SKIP_DEPS=
SKIP_SUBMODULES=
while test "$#" != 0; do
    case "$1" in
        --skip-dep*) SKIP_DEPS=true ;;
        --skip-sub*) SKIP_SUBMODULES=true ;;
        --skip-upd*) SKIP_DEPS=true; SKIP_SUBMODULES=true ;;
        --) shift; break ;; # standard end of options list
        -*) echo >&2 "$0: unknown option '$1'"; exit 1 ;;
        *) echo >&2 "$0: unknown argument '$1'"; exit 1 ;;
    esac
    shift
done

if test -z "$SKIP_DEPS"; then
    sudo apt-get autoclean
    sudo apt-get autoremove
    sudo apt-get update

    command -v bsdtar >/dev/null 2>&1 || sudo apt-get install libarchive-tools
    command -v chromium-browser >/dev/null 2>&1 || sudo apt-get install chromium-browser
    command -v cmake  >/dev/null 2>&1 || sudo apt-get install cmake
    command -v ctags >/dev/null 2>&1 || sudo apt-get install exuberant-ctags
    command -v curl >/dev/null 2>&1 || sudo apt-get install curl
    command -v dconf-editor >/dev/null 2>&1 || sudo apt-get install dconf-editor
    command -v figlet >/dev/null 2>&1 || sudo apt-get install figlet
    command -v firefox >/dev/null 2>&1 || sudo apt-get install firefox firefox-locale-en
    command -v getfacl >/dev/null 2>&1 || sudo apt-get install acl
    command -v gimp >/dev/null 2>&1 || sudo apt-get install gimp
    command -v git >/dev/null 2>&1 || sudo apt-get install git
    command -v gitk >/dev/null 2>&1 || sudo apt-get install gitk
    command -v gnome-extensions  >/dev/null 2>&1 || sudo apt-get install gnome-extensions
    command -v htop >/dev/null 2>&1 || sudo apt-get install htop
    command -v jq >/dev/null 2>&1 || sudo apt-get install jq
    command -v kitty >/dev/null 2>&1 || sudo apt-get install kitty
    command -v lcov >/dev/null 2>&1 || sudo apt-get install lcov
    command -v multitail >/dev/null 2>&1 || sudo apt-get install multitail
    command -v netstat >/dev/null 2>&1 || sudo apt-get install net-tools
    command -v pip3 >/dev/null 2>&1 || sudo apt-get install python3-pip
    command -v rename >/dev/null 2>&1 || sudo apt-get install rename
    command -v sqlite3 >/dev/null 2>&1 || sudo apt-get install sqlite3
    command -v tmux >/dev/null 2>&1 || sudo apt-get install tmux
    command -v tree >/dev/null 2>&1 || sudo apt-get install tree
    command -v tuxguitar >/dev/null 2>&1 || sudo apt-get install tuxguitar tuxguitar-alsa tuxguitar-oss tuxguitar-jsa
    command -v unzip >/dev/null 2>&1 || sudo apt-get install unzip
    command -v wmctrl  >/dev/null 2>&1 || sudo apt-get install wmctrl
    command -v xclip >/dev/null 2>&1 || sudo apt-get install xclip
    command -v zstd >/dev/null 2>&1 || sudo apt-get install zstd

    dpkg -l | grep "ii  locales " >/dev/null 2>&1 || sudo apt-get install locales
    dpkg -l | grep git-extras >/dev/null 2>&1 || sudo apt-get install git-extras
    dpkg -l | grep ubuntu-restricted-extras >/dev/null 2>&1 || sudo apt-get install ubuntu-restricted-extras
    dpkg -l | grep vim.gtk >/dev/null 2>&1 || sudo apt-get install vim.gtk

    # Git single key behaviour (interactive.singlekey setting).
    # See https://superuser.com/a/817688/
    dpkg -l | grep libterm-readkey-perl >/dev/null 2>&1 || sudo apt-get install libterm-readkey-perl

    # Fonts.
    dpkg -l | grep fonts-inconsolata >/dev/null 2>&1 || sudo apt-get install fonts-inconsolata
    dpkg -l | grep ttf-anonymous-pro >/dev/null 2>&1 || sudo apt-get install ttf-anonymous-pro
    dpkg -l | grep ttf-mscorefonts-installer >/dev/null 2>&1 || sudo apt-get install ttf-mscorefonts-installer

    if is_ubuntu_20_04; then
        dpkg -l | grep ttf-ubuntu-font-family >/dev/null 2>&1 || sudo apt-get install ttf-ubuntu-font-family
    fi

    # PIP
    python3 -m pip install --upgrade --user pip

    # Tools.
    python3 -m pip install --upgrade --user flake8
    python3 -m pip install --upgrade --user flake8-docstrings
    python3 -m pip install --upgrade --user gcovr
    python3 -m pip install --upgrade --user mypy
    python3 -m pip install --upgrade --user pydocstyle

fi

if test -z "$SKIP_SUBMODULES"; then
    git submodule init
    git submodule update
    git submodule foreach 'echo "\n\n\n\nUpdating $PWD" && git branch && git checkout master && git pull --ff-only origin master --set-upstream && git prune' || true
fi

for file in "$SOURCE_PATH/src/".*; do
    create_home_dir_symlink "$file"
done

for file in "$SOURCE_PATH"/src/*; do
    create_home_dir_symlink "$file"
done

checked-symlink ~/.dotfiles/vendor/paulirish/git-open/git-open ~/bin/git-open
checked-symlink ~/.dotfiles/vendor/php-build/php-build/bin/php-build  ~/bin/php-build
checked-symlink ~/.dotfiles/vendor/nvm-sh/nvm ~/.nvm
checked-symlink ~/.dotfiles/src/.vim ~/.config/nvim

test -d ~/.rbenv/plugins || mkdir -pv ~/.rbenv/plugins
checked-symlink ~/.dotfiles/vendor/rbenv/ruby-build ~/.rbenv/plugins/ruby-build

if test -f ~/.dotfiles-private/install; then
    ~/.dotfiles-private/install
fi

"$SOURCE_PATH"/src/bin/setup-settings
"$SOURCE_PATH"/src/bin/setup-keybindings

fc-cache -f
