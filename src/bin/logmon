#!/usr/bin/env bash

set -e

unset CDPATH
unset IFS

show_usage() {
    cat <<USAGE
Usage: $(basename "$0") [--all | -a | -d | -m | -am ]
USAGE
}

test "$#" = 0 && show_usage && exit 0

_showrecentapperrors() {
    today="$(date --utc +%Y-%m-%d)"
    yesterday="$(date --utc --date yesterday +%Y-%m-%d)"

    egrep "\.(EMERG|ALERT|CRIT|ERROR|WARN|NOTICE)" storage/logs/{laravel-$yesterday,laravel-$today,laravel}.log | tail -n10
}

_showrecentconerrors() {
    egrep "\.(EMERG|ALERT|CRIT|ERROR|WARN|NOTICE)" storage/logs/console.log | tail -n10
}

_showrecenterrors() {
    _showrecentapperrors
    _showrecentconerrors
}

logmononeline() {
    tail -n 1200 -f storage/logs/*.log \
        |  sed --unbuffered \
            -e 's/\("GET.*\)/\o033[34m\1\o033[0m/' \
            -e 's/\("POST.*\)/\o033[33m\1\o033[0m/' \
            -e 's/\("PUT.*\)/\o033[36m\1\o033[0m/' \
            -e 's/\("DELETE.*\)/\o033[35m\1\o033[0m/' \
            -e 's/\(.*INFO.*\)/\o033[32m\1\o033[0m/' \
            -e 's/\(.*NOTICE.*\)/\o033[36m\1\o033[0m/' \
            -e 's/\(.*WARNING.*\)/\o033[31m\1\o033[0m/' \
            -e 's/\(.*ERROR.*\)/\o033[31m\1\o033[0m/' \
        | egrep "(DEBUG|INFO|NOTICE|WARN|ERROR|CRIT|ALERT|EMERG)"
}

# INFO          Green
# NOTICE        Teak
# ERROR         Red
# HTTP GET      Blue
# HTTP POST     Yellow
# HTTP PUT      Magenta
# HTTP DELETE   Magenta
logmoninfo() {
    tail -n 1200 -f storage/logs/*.log \
        |  sed --unbuffered \
            -e 's/\("GET.*\)/\o033[34m\1\o033[0m/' \
            -e 's/\("POST.*\)/\o033[33m\1\o033[0m/' \
            -e 's/\("PUT.*\)/\o033[36m\1\o033[0m/' \
            -e 's/\("DELETE.*\)/\o033[35m\1\o033[0m/' \
            -e 's/\(.*INFO.*\)/\o033[32m\1\o033[0m/' \
            -e 's/\(.*NOTICE.*\)/\o033[36m\1\o033[0m/' \
            -e 's/\(.*WARNING.*\)/\o033[31m\1\o033[0m/' \
            -e 's/\(.*ERROR.*\)/\o033[31m\1\o033[0m/' \
        | egrep "\\.(INFO|NOTICE|WARN|ERROR|CRIT|ALERT|EMERG)"
}

# 31=RED
# 34=BLUE
# 35=MAGENTA
# 36=TEAK
logmondebug() {
    tail -n 200 -f storage/logs/*.log \
        | perl -pe "
            s/.*\.(EMERG|ALERT|CRIT|ERROR).*/\e[1;31m$&\e[0m/;
            s/.*\.(WARNING).*/\e[0;31m$&\e[0m/;
            s/.*NOTICE.*/\e[0;36m$&\e[0m/;
            s/.*INFO.*/\e[0;32m$&\e[0m/;
            "
}

logmonraw() {
    tail -n 1200 -f storage/logs/*.log
}

C_RESET='\033[1;0m'

  # Regular               # Bold                          # Underline
  C_BLACK="\033[0;30m";   C_BLACK_BOLD="\033[1;30m";      C_BLACK_UNDERLINE="\033[4;30m"
    C_RED="\033[0;31m";     C_RED_BOLD="\033[1;31m";        C_RED_UNDERLINE="\033[4;31m"
  C_GREEN="\033[0;32m";   C_GREEN_BOLD="\033[1;32m";      C_GREEN_UNDERLINE="\033[4;32m"
 C_YELLOW="\033[0;33m";  C_YELLOW_BOLD="\033[1;33m";     C_YELLOW_UNDERLINE="\033[4;33m"
   C_BLUE="\033[0;34m";    C_BLUE_BOLD="\033[1;34m";       C_BLUE_UNDERLINE="\033[4;34m"
C_MAGENTA="\033[0;35m"; C_MAGENTA_BOLD="\033[1;35m";    C_MAGENTA_UNDERLINE="\033[4;35m"
   C_CYAN="\033[0;36m";    C_CYAN_BOLD="\033[1;36m";       C_CYAN_UNDERLINE="\033[4;36m"
  C_WHITE="\033[0;37m";   C_WHITE_BOLD="\033[1;37m";      C_WHITE_UNDERLINE="\033[4;37m"

merge=
mysql_log=
app_log=
apache_log=

DEFAULT_APACHE_LOG=/var/log/apache2/*.log
DEFAULT_APP_LOG=storage/logs/*.log
DEFAULT_MYSQL_LOG=/var/log/mysql/*.log

while test "$#" != 0; do
    case "$1" in
        --oneline) logmononeline ;;
        --debug) logmondebug ;;
        --info) logmoninfo ;;
        --info-raw) logmonraw ;;

        --all)
            app_log=$DEFAULT_APP_LOG
            apache_log=$DEFAULT_APACHE_LOG
            mysql_log=$DEFAULT_MYSQL_LOG
            merge=1
            ;;
        --mysql)
            mysql_log=$DEFAULT_MYSQL_LOG
            merge=1
            ;;
        --app)
            app_log=$DEFAULT_APP_LOG
            merge=1
            ;;
        --apache)
            apache_log=$DEFAULT_APACHE_LOG
            merge=1
            ;;

        showerrors) egrep "\.(EMERG|ALERT|CRIT|ERROR|WARN|NOTICE)" storage/logs/*.log ;;
        showrecentapperrors) _showrecentapperrors ;;
        showrecentconerrors) _showrecentconerrors ;;
        showrecenterrors) _showrecenterrors ;;
        showapplogscolor) tail -n 200 -f storage/logs/*.log | perl -pe "s/.*\.(EMERG|ALERT|CRIT|ERROR|WARN|NOTICE).*/\e[1;31m$&\e[0m/;s/.*INFO.*/\e[0;32m$&\e[0m/" ;;

        --) shift; break ;; # standard end of options list
        -*) echo >&2 "$(basename "$0"): unknown option '$1'" && exit 1 ;;
        *)  echo >&2 "$(basename "$0"): unknown argument '$1'" && exit 1 ;;
    esac
    shift
done

if test -n "$merge"; then
    tail -f -n 500 $mysql_log $apache_log $app_log
fi
